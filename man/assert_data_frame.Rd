% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions.R
\name{assert_data_frame}
\alias{assert_data_frame}
\title{Is an Argument a Data Frame?}
\usage{
assert_data_frame(
  arg,
  required_vars = NULL,
  optional = FALSE,
  check_temp_vars = TRUE
)
}
\arguments{
\item{arg}{A function argument to be checked}

\item{required_vars}{A list of variables created using \code{vars()}}

\item{optional}{Is the checked parameter optional? If set to \code{FALSE} and \code{arg}
is \code{NULL} then an error is thrown}

\item{check_temp_vars}{Check for variables with names beginning with "temp_". If
set to \code{TRUE} and "temp_" variables are in \code{arg}, then an error is thrown}
}
\value{
The function throws an error if \code{arg} is not a data frame or if \code{arg}
is a data frame but misses any variable specified in \code{required_vars} or
if any temp_* variables are in \code{arg}. Otherwise, the input is returned invisibly.
}
\description{
Checks if an argument is a data frame and (optionally) whether it contains
a set of required variables and (optionally) whether there are any variables
named test_*.
}
\examples{
library(admiral.test)
data(dm)

example_fun <- function(dataset) {
  assert_data_frame(dataset, required_vars = vars(STUDYID, USUBJID))
}

example_fun(dm)

try(example_fun(dplyr::select(dm, -STUDYID)))

try(example_fun(dplyr::mutate(dm, temp_var1 = "AAA")))

try(example_fun("Not a dataset"))
}
\author{
Thomas Neitmann
}
\keyword{assertion}
