% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_vars_query.R
\name{assert_valid_queries}
\alias{assert_valid_queries}
\title{Verify if a Dataset Has the Required Format as Queries Dataset.}
\usage{
assert_valid_queries(queries, queries_name)
}
\arguments{
\item{queries}{A data.frame.}

\item{queries_name}{Name of the queries dataset, a string.}
}
\value{
The function throws an error if any of the requirements not met.
}
\description{
Verify if a Dataset Has the Required Format as Queries Dataset.
}
\details{
Check if the dataset has the following columns
\itemize{
\item \code{VAR_PREFIX}, e.g., SMQ01, CQ12
\item \code{QUERY_NAME}, non NA, must be unique per each \code{VAR_PREFIX}
\item \code{QUERY_ID}, could be NA, must be unique per each \code{VAR_PREFIX}
\item \code{QUERY_SCOPE}, 'BROAD', 'NARROW', or NA
\item \code{QUERY_SCOPE_NUM}, 1, 2, or NA
\item \code{TERM_LEVEL}, e.g., \code{"AEDECOD"}, \code{"AELLT"}, \code{"AELLTCD"}, ...
\item \code{TERM_NAME}, character, could be NA only at those observations
where \code{TERM_ID} is non-NA
\item \code{TERM_ID}, integer, could be NA only at those observations
where \code{TERM_NAME} is non-NA
}
}
\examples{
data("queries")
assert_valid_queries(queries, "queries")
}
\seealso{
Functions moved to admiraldev package: 
\code{\link{arg_name}()},
\code{\link{assert_character_scalar}()},
\code{\link{assert_character_vector}()},
\code{\link{assert_data_frame}()},
\code{\link{assert_db_requirements}()},
\code{\link{assert_filter_cond}()},
\code{\link{assert_function}()},
\code{\link{assert_has_variables}()},
\code{\link{assert_integer_scalar}()},
\code{\link{assert_list_element}()},
\code{\link{assert_list_of}()},
\code{\link{assert_logical_scalar}()},
\code{\link{assert_numeric_vector}()},
\code{\link{assert_one_to_one}()},
\code{\link{assert_order_vars}()},
\code{\link{assert_param_does_not_exist}()},
\code{\link{assert_s3_class}()},
\code{\link{assert_symbol}()},
\code{\link{assert_terms}()},
\code{\link{assert_unit}()},
\code{\link{assert_vars}()},
\code{\link{assert_varval_list}()},
\code{\link{backquote}()},
\code{\link{contains_vars}()},
\code{\link{dataset_vignette}()},
\code{\link{dquote}()},
\code{\link{enumerate}()},
\code{\link{expect_dfs_equal}()},
\code{\link{extend_source_datasets}()},
\code{\link{extract_vars}()},
\code{\link{format.sdg_select}()},
\code{\link{format.smq_select}()},
\code{\link{get_constant_vars}()},
\code{\link{get_duplicates}()},
\code{\link{get_source_vars}()},
\code{\link{is_auto}()},
\code{\link{quo_c}()},
\code{\link{replace_values_by_names}()},
\code{\link{squote}()},
\code{\link{suppress_warning}()},
\code{\link{valid_time_units}()},
\code{\link{validate_query}()},
\code{\link{validate_sdg_select}()},
\code{\link{validate_smq_select}()},
\code{\link{warn_if_inconsistent_list}()},
\code{\link{warn_if_invalid_dtc}()},
\code{\link{warn_if_vars_exist}()},
\code{\link{what_is_it}()}
}
\author{
Shimeng Huang, Ondrej Slama
}
\concept{move_adm_dev}
\keyword{move_adm_dev}
