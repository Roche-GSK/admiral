% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_extreme_records.R
\name{derive_extreme_records}
\alias{derive_extreme_records}
\title{Add the First or Last Observation for Each By Group as New Records}
\usage{
derive_extreme_records(
  dataset = NULL,
  dataset_add,
  dataset_ref = NULL,
  by_vars = NULL,
  order = NULL,
  mode = NULL,
  filter_add = NULL,
  check_type = "warning",
  exist_flag = NULL,
  true_value = "Y",
  false_value = NA_character_,
  keep_source_vars = exprs(everything()),
  set_values_to
)
}
\arguments{
\item{dataset}{Input dataset

\describe{
\item{Default Value}{\code{NULL}}
}}

\item{dataset_add}{Additional dataset

The additional dataset, which determines the by groups returned in the input dataset,
based on the groups that exist in this dataset after being subset by \code{filter_add}.

The variables specified in the \code{by_vars} and \code{filter_add} parameters are expected
in this dataset. If \code{mode} and \code{order} are specified, the first or last observation
within each by group, defined by \code{by_vars}, is selected.

\describe{
\item{Default Value}{none}
}}

\item{dataset_ref}{Reference dataset

The variables specified for \code{by_vars} are expected. For each observation of
the specified dataset a new observation is added to the input dataset.

\describe{
\item{Default Value}{\code{NULL}}
}}

\item{by_vars}{Grouping variables

If \code{dataset_ref} is specified, this argument must be specified.

\describe{
\item{Default Value}{\code{NULL}}
}}

\item{order}{Sort order

Within each by group the observations are ordered by the specified order.

\describe{
\item{Permitted values}{list of expressions created by \code{exprs()}, e.g.,
\code{exprs(ADT, desc(AVAL))}}
\item{Default Value}{none}
}}

\item{mode}{Selection mode (first or last)

If \code{"first"} is specified, the first observation of each by group is added
to the input dataset. If \code{"last"} is specified, the last observation of
each by group is added to the input dataset.

\describe{
\item{Permitted values}{\code{"first"}, \code{"last"}}
\item{Default Value}{Some default value}
}}

\item{filter_add}{Filter for additional dataset (\code{dataset_add})

Only observations in \code{dataset_add} fulfilling the specified condition are
considered.

\describe{
\item{Default Value}{\code{NULL}}
}}

\item{check_type}{Check uniqueness?

If \code{"warning"} or \code{"error"} is specified, the specified message is issued
if the observations of the (restricted) additional dataset are not unique
with respect to the by variables and the order.

\describe{
\item{Permitted values}{\code{"none"}, \code{"message"}, \code{"warning"}, \code{"error"}}
\item{Default Value}{\code{"warning"}}
}}

\item{exist_flag}{Existence flag

The specified variable is added to the output dataset.

For by groups with at least one observation in the additional dataset
(\code{dataset_add}) \code{exist_flag} is set to the value specified by the
\code{true_value} argument.

For all other by groups \code{exist_flag} is set to the value specified by the
\code{false_value} argument.

\describe{
\item{Permitted values}{Variable name}
\item{Default Value}{\code{NULL}}
}}

\item{true_value}{True value

For new observations selected from the additional dataset (\code{dataset_add}),
\code{exist_flag} is set to the specified value.

\describe{
\item{Default Value}{\code{"Y"}}
}}

\item{false_value}{False value

For new observations not selected from the additional dataset
(\code{dataset_add}), \code{exist_flag} is set to the specified value.

\describe{
\item{Default Value}{\code{NA_character_}}
}}

\item{keep_source_vars}{Variables to be kept in the new records

A named list or tidyselect expressions created by \code{exprs()} defining the
variables to be kept for the new records. The variables specified for
\code{by_vars} and \code{set_values_to} need not be specified here as they are kept
automatically.

\describe{
\item{Default Value}{\code{exprs(everything())}}
}}

\item{set_values_to}{Variables to be set

The specified variables are set to the specified values for the new
observations.

Set a list of variables to some specified value for the new records
\itemize{
\item LHS refer to a variable.
\item RHS refers to the values to set to the variable. This can be a string, a
symbol, a numeric value, an expression or NA. If summary functions are
used, the values are summarized by the variables specified for \code{by_vars}.
}

For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{  set_values_to = exprs(
    AVAL = sum(AVAL),
    DTYPE = "AVERAGE",
  )
}\if{html}{\out{</div>}}

\describe{
\item{Default Value}{none}
}}
}
\value{
The input dataset with the first or last observation of each by group
added as new observations.
}
\description{
Add the first or last observation for each by group as new observations. The
new observations can be selected from the additional dataset. This function can
be used for adding the maximum or minimum value as a separate visit.
All variables of the selected observation are kept. This distinguishes
\code{derive_extreme_records()} from \code{derive_summary_records()},
where only the by variables are populated for the new records.
}
\details{
\enumerate{
\item The additional dataset (\code{dataset_add}) is restricted as specified by the
\code{filter_add} argument.
\item For each group (with respect to the variables specified for the
\code{by_vars} argument) the first or last observation (with respect to the
order specified for the \code{order} argument and the mode specified for the
\code{mode} argument) is selected.
\item If \code{dataset_ref} is specified, observations which are in \code{dataset_ref}
but not in the selected records are added.
\item The variables specified by the \code{set_values_to} argument are added to
the selected observations.
\item The variables specified by the \code{keep_source_vars} argument are selected
along with the variables specified in \code{by_vars} and \code{set_values_to}
arguments.
\item The observations are added to input dataset.
}
}
\section{Examples}{

\subsection{Add a new record for each \code{USUBJID} storing the minimum value (first \code{AVAL})}{

If multiple records meet the minimum criterion, take the first value by
\code{AVISITN}. Set \code{AVISITN = 97} and \code{DTYPE = MINIMUM} for these new records.
Specify the variables that need to be kept in the new records.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(tibble)
library(dplyr, warn.conflicts = FALSE)
library(lubridate)

adlb <- tribble(
  ~USUBJID, ~AVISITN, ~AVAL, ~LBSEQ,
  "1",      1,          113,      1,
  "1",      2,          113,      2,
  "1",      3,          117,      3,
  "2",      1,          101,      1,
  "2",      2,          101,      2,
  "2",      3,           95,      3
)

derive_extreme_records(
  adlb,
  dataset_add = adlb,
  by_vars = exprs(USUBJID),
  order = exprs(AVAL, AVISITN),
  mode = "first",
  filter_add = !is.na(AVAL),
  keep_source_vars = exprs(AVAL),
  set_values_to = exprs(
    AVISITN = 97,
    DTYPE = "MINIMUM"
  )
)
#> # A tibble: 8 x 5
#>   USUBJID AVISITN  AVAL LBSEQ DTYPE  
#>   <chr>     <dbl> <dbl> <dbl> <chr>  
#> 1 1             1   113     1 <NA>   
#> 2 1             2   113     2 <NA>   
#> 3 1             3   117     3 <NA>   
#> 4 2             1   101     1 <NA>   
#> 5 2             2   101     2 <NA>   
#> 6 2             3    95     3 <NA>   
#> 7 1            97   113    NA MINIMUM
#> 8 2            97    95    NA MINIMUM
}\if{html}{\out{</div>}}
}

\subsection{Add a new record for each \code{USUBJID} storing the maximum value (last \code{AVAL})}{

If multiple records meet the maximum criterion, take the first value by
\code{AVISITN}. Set \code{AVISITN = 98} and \code{DTYPE = MAXIMUM} for these new records.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{derive_extreme_records(
  adlb,
  dataset_add = adlb,
  by_vars = exprs(USUBJID),
  order = exprs(desc(AVAL), AVISITN),
  mode = "first",
  filter_add = !is.na(AVAL),
  set_values_to = exprs(
    AVISITN = 98,
    DTYPE = "MAXIMUM"
  )
)
#> # A tibble: 8 x 5
#>   USUBJID AVISITN  AVAL LBSEQ DTYPE  
#>   <chr>     <dbl> <dbl> <dbl> <chr>  
#> 1 1             1   113     1 <NA>   
#> 2 1             2   113     2 <NA>   
#> 3 1             3   117     3 <NA>   
#> 4 2             1   101     1 <NA>   
#> 5 2             2   101     2 <NA>   
#> 6 2             3    95     3 <NA>   
#> 7 1            98   117     3 MAXIMUM
#> 8 2            98   101     1 MAXIMUM
}\if{html}{\out{</div>}}
}
}

\seealso{
\code{\link[=derive_summary_records]{derive_summary_records()}}

BDS-Findings Functions for adding Parameters/Records: 
\code{\link{default_qtc_paramcd}()},
\code{\link{derive_expected_records}()},
\code{\link{derive_extreme_event}()},
\code{\link{derive_locf_records}()},
\code{\link{derive_param_bmi}()},
\code{\link{derive_param_bsa}()},
\code{\link{derive_param_computed}()},
\code{\link{derive_param_doseint}()},
\code{\link{derive_param_exist_flag}()},
\code{\link{derive_param_exposure}()},
\code{\link{derive_param_framingham}()},
\code{\link{derive_param_map}()},
\code{\link{derive_param_qtc}()},
\code{\link{derive_param_rr}()},
\code{\link{derive_param_wbc_abs}()},
\code{\link{derive_summary_records}()}
}
\concept{der_prm_bds_findings}
\keyword{der_prm_bds_findings}
\section{Examples}{
\subsection{Add a new record for each \code{USUBJID} storing the minimum value (first \code{AVAL})}{

If multiple records meet the minimum criterion, take the first value by
\code{AVISITN}. Set \code{AVISITN = 97} and \code{DTYPE = MINIMUM} for these new records.
Specify the variables that need to be kept in the new records.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(tibble)
library(dplyr, warn.conflicts = FALSE)
library(lubridate)
adlb <- tribble(
  ~USUBJID, ~AVISITN, ~AVAL, ~LBSEQ,
  "1",      1,          113,      1,
  "1",      2,          113,      2,
  "1",      3,          117,      3,
  "2",      1,          101,      1,
  "2",      2,          101,      2,
  "2",      3,           95,      3
)
derive_extreme_records(
  adlb,
  dataset_add = adlb,
  by_vars = exprs(USUBJID),
  order = exprs(AVAL, AVISITN),
  mode = "first",
  filter_add = !is.na(AVAL),
  keep_source_vars = exprs(AVAL),
  set_values_to = exprs(
    AVISITN = 97,
    DTYPE = "MINIMUM"
  )
)
#> # A tibble: 8 × 5
#>   USUBJID AVISITN  AVAL LBSEQ DTYPE  
#>   <chr>     <dbl> <dbl> <dbl> <chr>  
#> 1 1             1   113     1 <NA>   
#> 2 1             2   113     2 <NA>   
#> 3 1             3   117     3 <NA>   
#> 4 2             1   101     1 <NA>   
#> 5 2             2   101     2 <NA>   
#> 6 2             3    95     3 <NA>   
#> 7 1            97   113    NA MINIMUM
#> 8 2            97    95    NA MINIMUM}\if{html}{\out{</div>}}}
\subsection{Add a new record for each \code{USUBJID} storing the maximum value (last \code{AVAL})}{

If multiple records meet the maximum criterion, take the first value by
\code{AVISITN}. Set \code{AVISITN = 98} and \code{DTYPE = MAXIMUM} for these new records.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{derive_extreme_records(
  adlb,
  dataset_add = adlb,
  by_vars = exprs(USUBJID),
  order = exprs(desc(AVAL), AVISITN),
  mode = "first",
  filter_add = !is.na(AVAL),
  set_values_to = exprs(
    AVISITN = 98,
    DTYPE = "MAXIMUM"
  )
)
#> # A tibble: 8 × 5
#>   USUBJID AVISITN  AVAL LBSEQ DTYPE  
#>   <chr>     <dbl> <dbl> <dbl> <chr>  
#> 1 1             1   113     1 <NA>   
#> 2 1             2   113     2 <NA>   
#> 3 1             3   117     3 <NA>   
#> 4 2             1   101     1 <NA>   
#> 5 2             2   101     2 <NA>   
#> 6 2             3    95     3 <NA>   
#> 7 1            98   117     3 MAXIMUM
#> 8 2            98   101     1 MAXIMUM}\if{html}{\out{</div>}}}
\subsection{Add a new record for each USUBJID storing for the last value}{

Set \code{AVISITN = 99} and \code{DTYPE = "LOV"} for these new records.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{derive_extreme_records(
  adlb,
  dataset_add = adlb,
  by_vars = exprs(USUBJID),
  order = exprs(AVISITN),
  mode = "last",
  set_values_to = exprs(
    AVISITN = 99,
    DTYPE = "LOV"
  )
)
#> # A tibble: 8 × 5
#>   USUBJID AVISITN  AVAL LBSEQ DTYPE
#>   <chr>     <dbl> <dbl> <dbl> <chr>
#> 1 1             1   113     1 <NA> 
#> 2 1             2   113     2 <NA> 
#> 3 1             3   117     3 <NA> 
#> 4 2             1   101     1 <NA> 
#> 5 2             2   101     2 <NA> 
#> 6 2             3    95     3 <NA> 
#> 7 1            99   117     3 LOV  
#> 8 2            99    95     3 LOV  }\if{html}{\out{</div>}}}
\subsection{Derive a new parameter for the first disease progression (PD)}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{adsl <- tribble(
  ~USUBJID, ~DTHDT,
  "1",      ymd("2022-05-13"),
  "2",      ymd(""),
  "3",      ymd("")
) %>%
  mutate(STUDYID = "XX1234")
adrs <- tribble(
  ~USUBJID, ~ADTC,        ~AVALC,
  "1",      "2020-01-02", "PR",
  "1",      "2020-02-01", "CR",
  "1",      "2020-03-01", "CR",
  "1",      "2020-04-01", "SD",
  "2",      "2021-06-15", "SD",
  "2",      "2021-07-16", "PD",
  "2",      "2021-09-14", "PD"
) %>%
  mutate(
    STUDYID = "XX1234",
    ADT = ymd(ADTC),
    PARAMCD = "OVR",
    PARAM = "Overall Response",
    ANL01FL = "Y"
  ) %>%
  select(-ADTC)
derive_extreme_records(
  adrs,
  dataset_ref = adsl,
  dataset_add = adrs,
  by_vars = exprs(STUDYID, USUBJID),
  filter_add = PARAMCD == "OVR" & AVALC == "PD",
  order = exprs(ADT),
  exist_flag = AVALC,
  true_value = "Y",
  false_value = "N",
  mode = "first",
  set_values_to = exprs(
    PARAMCD = "PD",
    PARAM = "Disease Progression",
    AVAL = yn_to_numeric(AVALC),
    ANL01FL = "Y",
    ADT = ADT
  )
)
#> # A tibble: 10 × 8
#>    USUBJID AVALC STUDYID ADT        PARAMCD PARAM               ANL01FL  AVAL
#>    <chr>   <chr> <chr>   <date>     <chr>   <chr>               <chr>   <dbl>
#>  1 1       PR    XX1234  2020-01-02 OVR     Overall Response    Y          NA
#>  2 1       CR    XX1234  2020-02-01 OVR     Overall Response    Y          NA
#>  3 1       CR    XX1234  2020-03-01 OVR     Overall Response    Y          NA
#>  4 1       SD    XX1234  2020-04-01 OVR     Overall Response    Y          NA
#>  5 2       SD    XX1234  2021-06-15 OVR     Overall Response    Y          NA
#>  6 2       PD    XX1234  2021-07-16 OVR     Overall Response    Y          NA
#>  7 2       PD    XX1234  2021-09-14 OVR     Overall Response    Y          NA
#>  8 2       Y     XX1234  2021-07-16 PD      Disease Progression Y           1
#>  9 1       N     XX1234  NA         PD      Disease Progression Y           0
#> 10 3       N     XX1234  NA         PD      Disease Progression Y           0}\if{html}{\out{</div>}}}
\subsection{Derive parameter indicating death}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{derive_extreme_records(
  dataset_ref = adsl,
  dataset_add = adsl,
  by_vars = exprs(STUDYID, USUBJID),
  filter_add = !is.na(DTHDT),
  exist_flag = AVALC,
  true_value = "Y",
  false_value = "N",
  mode = "first",
  set_values_to = exprs(
    PARAMCD = "DEATH",
    PARAM = "Death",
    ANL01FL = "Y",
    ADT = DTHDT
  )
)
#> # A tibble: 3 × 8
#>   STUDYID USUBJID PARAMCD PARAM ANL01FL ADT        DTHDT      AVALC
#>   <chr>   <chr>   <chr>   <chr> <chr>   <date>     <date>     <chr>
#> 1 XX1234  1       DEATH   Death Y       2022-05-13 2022-05-13 Y    
#> 2 XX1234  2       DEATH   Death Y       NA         NA         N    
#> 3 XX1234  3       DEATH   Death Y       NA         NA         N    }\if{html}{\out{</div>}}}}

