% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_row_summary.R
\name{derive_summary_records}
\alias{derive_summary_records}
\title{Add new record within by groups using aggregation functions}
\usage{
derive_summary_records(dataset, by_vars, fns, set_values_to = NULL,
  drop_values_from = NULL)
}
\arguments{
\item{dataset}{A data frame.}

\item{by_vars}{Variables to consider for generation of groupwise summary
records. Providing the names of variables in \code{\link[=vars]{vars()}} will create a
groupwise summary and generate summary records for the specified groups.}

\item{fns}{List of formulas specifying variable to use for aggregations.
This can include base functions like \code{mean}, \code{min}, \code{max}, \code{median}, \code{sd},
or \code{sum} or any other user-defined aggregation function.
For example,
\itemize{
\item When a summary function is same for one or more analysis variable, use
\code{fns = list(vars(AVAL, CHG) ~ mean}).
\item If different summary function is required for each analysis variable,
use \code{fns = list(AVAL ~ mean, CHG ~ sum(., na.rm = TRUE))}.
}

In general,
\itemize{
\item LHS refer to the one or more variable to use for summarizing.
\item RHS refer to a \strong{single} summary function.
}

In the formula representation e.g., \code{CHG ~ sum(., na.rm = TRUE)}, a \code{.}
serves as the data to be summarized which refers to the variable \code{CHG}.}

\item{set_values_to}{A list of variable name-value pairs. Use this argument
if you need to change the values of any newly derived records. Always new
values in \code{set_values_to} should be equal to the length of analysis
variable used in the \code{fns} argument. For example,
\itemize{
\item On using single analysis variable in \code{fns = list(AVAL ~ mean)} and
\code{set_values_to = vars(AVISITN = 9999, AVISIT = "Endpoint")} would change
the value of \code{AVISITN} to \code{9999} and \code{AVISIT} to \code{Endpoint} instead of
retaining.
\item Multiple analysis variables in \code{fns = list(vars(AVAL, CHG) ~ mean)} and
\code{set_values_to = vars(AVISITN = c(9998, 9999))} would change \code{AVISITN} to
\code{9998} for \code{AVAL} and \code{AVISITN} to \code{9999} for \code{CHG}.
}}

\item{drop_values_from}{Providing the names of variables in \code{\link[=vars]{vars()}}
will drop values and set as missing.}
}
\value{
A data frame with derived records appended to original dataset.
}
\description{
It is not uncommon to have an analysis need whereby one needs to derive an
analysis value (\code{AVAL}) from multiple records. The ADaM basic dataset
structure variable \code{DTYPE} is available to indicate when a new derived
records has been added to a dataset.
}
\details{
When all records have same values within \code{by_vars} then this function will
retain those common values in the newly derived records. Otherwise new value
will be set to \code{NA}.
}
\examples{
# Sample ADEG dataset ---
adeg <- tibble::tribble(
  ~USUBJID,   ~EGSEQ, ~EGREPNUM, ~PARAM,                 ~VISIT,      ~AVISIT,    ~EGDTC,                ~AVAL, ~TRTA,         ~SAFFL,
  "XYZ-1001",      1,         1,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-24T07:50:16",  385,  "",            "Y",
  "XYZ-1001",      2,         2,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-24T07:52:59",  399,  "",            "Y",
  "XYZ-1001",      3,         3,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-24T07:56:07",  396,  "",            "Y",
  "XYZ-1001",      4,         1,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-08T09:45:11",  384,  "Placebo",     "Y",
  "XYZ-1001",      5,         2,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-08T09:48:07",  393,  "Placebo",     "Y",
  "XYZ-1001",      6,         3,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-08T09:51:04",  388,  "Placebo",     "Y",
  "XYZ-1001",      7,         1,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-22T10:45:03",  385,  "Placebo",     "Y",
  "XYZ-1001",      8,         2,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-22T10:48:07",  394,  "Placebo",     "Y",
  "XYZ-1001",      9,         3,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-22T10:51:05",  402,  "Placebo",     "Y",
  "XYZ-1002",      1,         1,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-22T07:58:05",  399,  "",            "Y",
  "XYZ-1002",      2,         2,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-22T07:58:05",  410,  "",            "Y",
  "XYZ-1002",      3,         3,  "QTcF Interval (msec)", "SCREENING", "Baseline", "2016-02-22T08:01:06",  392,  "",            "Y",
  "XYZ-1002",      4,         1,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-06T09:50:04",  401,  "Active 20mg", "Y",
  "XYZ-1002",      5,         2,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-06T09:53:51",  407,  "Active 20mg", "Y",
  "XYZ-1002",      6,         3,  "QTcF Interval (msec)", "VISIT 2",   "Visit 2",  "2016-03-06T09:56:21",  400,  "Active 20mg", "Y",
  "XYZ-1002",      7,         1,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-24T10:50:07",  412,  "Active 20mg", "Y",
  "XYZ-1002",      8,         2,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-24T10:53:08",  414,  "Active 20mg", "Y",
  "XYZ-1002",      9,         3,  "QTcF Interval (msec)", "VISIT 3",   "Visit 3",  "2016-03-24T10:56:05",  402,  "Active 20mg", "Y",
)

# Summarize the average of the triplicate ECG interval values (AVAL)
derive_summary_records(adeg,
                   by_vars = vars(USUBJID, PARAM, AVISIT),
                   fns = list(AVAL ~ mean(., na.rm = TRUE)),
                   set_values_to = vars(DTYPE = "AVERAGE"))

# Sample ADVS dataset ---
advs <- tibble::tribble(
  ~STUDYID, ~USUBJID,      ~VSSEQ, ~PARAMCD, ~PARAM,    ~AVAL, ~VSSTRESU, ~VISITNUM, ~VISIT,      ~VSDTC,
  "XYZ",    "XYZ-001-001",   1164, "WEIGHT",  "Weight",    99, "kg",              1, "Screening", "2018-03-19",
  "XYZ",    "XYZ-001-001",   1165, "WEIGHT",  "Weight",   101, "kg",              2, "Run-In"   , "2018-03-26",
  "XYZ",    "XYZ-001-001",   1166, "WEIGHT",  "Weight",   100, "kg",              3, "Baseline" , "2018-04-16",
  "XYZ",    "XYZ-001-001",   1167, "WEIGHT",  "Weight",    94, "kg",              4, "Week 24"  , "2018-09-30",
  "XYZ",    "XYZ-001-001",   1168, "WEIGHT",  "Weight",    92, "kg",              5, "Week 48"  , "2019-03-17",
  "XYZ",    "XYZ-001-001",   1169, "WEIGHT",  "Weight",    95, "kg",              6, "Week 52"  , "2019-04-14",
)

# set new values to any variable, DTYPE = MAXIMUM refer to `MAX()` record and DTYPE = AVERAGE refer `MEAN()` record
# `set_values_to` must be of same length as new records
derive_summary_records(advs,
  by_vars = vars(STUDYID, USUBJID, PARAMCD),
  fns = list(AVAL ~ max, AVAL ~ mean),
  set_values_to = vars(DTYPE = c("MAXIMUM", "AVERAGE"))
)

# drop retained value of VSSTRESU in the derived record
derive_summary_records(advs,
  by_vars = vars(STUDYID, USUBJID, PARAMCD),
  fns = list(AVAL ~ mean),
  set_values_to = vars(DTYPE = "MAXIMUM"),
  drop_values_from = vars(VSSTRESU)
)

}
\concept{row summary}
