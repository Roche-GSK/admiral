% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_var_ontrtfl.R
\name{derive_var_ontrtfl}
\alias{derive_var_ontrtfl}
\title{Derive On-Treatment Flag Variable}
\usage{
derive_var_ontrtfl(
  dataset,
  date,
  ref_start_date,
  ref_end_date = NULL,
  ref_end_window = 0,
  filter_pre_timepoint = NULL
)
}
\arguments{
\item{dataset}{\code{data.frame}.}

\item{date}{The assessment date (e.g. \code{ADT} for the date of a VS test)
Required; A date or date-time object column is expected}

\item{ref_start_date}{The lower bound of the on-treatment period
Required; A date or date-time object column is expected.}

\item{ref_end_date}{The upper bound of the on-treatment period
A date or date-time object column is expected.
Optional; This can be null and everything after \code{ref_start_date} will be
considered on-treatment.
Default is NULL.}

\item{ref_end_window}{A window to add to the upper bound \code{ref_end_date}
measured in days
(e.g. 7 if 7 days should be added to the upper bound)
Optional; default is 0}

\item{filter_pre_timepoint}{An expression to filter observations as not
on-treatment when \code{date} = \code{ref_start_date}. For example, if
observations where \code{VSTPT = PRE} should not be considered on-treatment when
\code{date = ref_start_date}, \code{filter_pre_timepoint} should be used
to denote when the on-treatment flag should be set to null.
Optional; default = NULL}
}
\value{
The input dataset with an additional column named
\code{ONTRTFL} with a value of \code{"Y"} or \code{NA}
}
\description{
Derive on-treatment flag (\code{ONTRTFL}) in an ADaM dataset with a single
assessment date
}
\details{
On-Treatment is calculated by determining whether the assessment date or
start/stop dates fall between 2 dates. The following logic is used to
assign on-treatment = Y:
\enumerate{
\item \code{date} is missing and \code{ref_start_date}is non-missing
\item No timepoint filter is provided (\code{filter_pre_timepoint}) and both
\code{date} and \code{ref_start_date} are non-missing and \code{date} =
\code{ref_start_date}
\item A timepoint is provided (\code{filter_pre_timepoint}) and both \code{date}
and \code{ref_start_date} are non-missing and \code{date = ref_start_date}
and the filter provided in \code{filter_pre_timepoint} is not true.
\item \code{ref_end_date} is not provided and \code{ref_start_date < date}
\item \code{ref_end_date} is provided and \code{ref_start_date < date} <=
\code{ref_end_date + ref_end_window}.
}

Any date imputations needed should be done prior to calling this function.
}
\examples{
library(dplyr, warn.conflicts = FALSE)
library(lubridate, warn.conflicts = FALSE)

bds1 <- tibble::tribble(
  ~USUBJID, ~ADT,              ~TRTSDT,           ~TRTEDT,
  "P01",    ymd("2020-02-24"), ymd("2020-01-01"), ymd("2020-03-01"),
  "P02",    ymd("2020-01-01"), ymd("2020-01-01"), ymd("2020-03-01"),
  "P03",    ymd("2019-12-31"), ymd("2020-01-01"), ymd("2020-03-01")
)
derive_var_ontrtfl(
  bds1,
  date = ADT,
  ref_start_date = TRTSDT,
  ref_end_date = TRTEDT
)

bds2 <- tibble::tribble(
  ~USUBJID, ~ADT,              ~TRTSDT,           ~TRTEDT,
  "P01",    ymd("2020-07-01"), ymd("2020-01-01"), ymd("2020-03-01"),
  "P02",    ymd("2020-04-30"), ymd("2020-01-01"), ymd("2020-03-01"),
  "P03",    ymd("2020-03-15"), ymd("2020-01-01"), ymd("2020-03-01")
)
derive_var_ontrtfl(
  bds2,
  date = ADT,
  ref_start_date = TRTSDT,
  ref_end_date = TRTEDT,
  ref_end_window = 60
)

bds3 <- tibble::tribble(
  ~USUBJID, ~ADTM,              ~TRTSDTM,           ~TRTEDTM,           ~TPT,
  "P01",    "2020-01-02T12:00", "2020-01-01T12:00", "2020-03-01T12:00", NA,
  "P02",    "2020-01-01T12:00", "2020-01-01T12:00", "2020-03-01T12:00", "PRE",
  "P03",    "2019-12-31T12:00", "2020-01-01T12:00", "2020-03-01T12:00", NA
) \%>\%
  mutate(
    ADTM = ymd_hm(ADTM),
    TRTSDTM = ymd_hm(TRTSDTM),
    TRTEDTM = ymd_hm(TRTEDTM)
  )
derive_var_ontrtfl(
  bds3,
  date = ADTM,
  ref_start_date = TRTSDTM,
  ref_end_date = TRTEDTM,
  filter_pre_timepoint = TPT == "PRE"
)
}
\author{
Alice Ehmann
}
\keyword{bds}
\keyword{derivation}
